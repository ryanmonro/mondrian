{"version":3,"sources":["Composition.js","Tile.js","EdgeButton.js","RowButton.js","Row.js","BoardButton.js","Board.js","Controls.js","AboutModal.js","App.js","serviceWorker.js","index.js"],"names":["NOTES","SUBDIVS","INITIALROWS","AUTOBARS","Composition","_this","this","Object","classCallCheck","tilesToPlayAtPosition","current","total","tiles","lastStep","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","rows","Symbol","iterator","next","done","row","value","tileCount","length","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tile","note","tileSteps","Math","floor","tileStart","ceil","col","playNow","isPlaying","firstBarFirstNote","firstBar","duration","push","err","return","randomiseNext","randomiseRows","auto","barCount","play","playing","stop","randomise","numberOfRows","i","addRow","change","CompositionRow","pop","addTile","subtractTile","numberOfTiles","random","arguments","CompositionTile","toString","colours","Tile","_this$props","props","composition","updateComposition","border","colour","width","react_default","a","createElement","className","style","background","string","onClick","Component","EdgeButton","desktop","children","_this$props2","enabled","objectSpread","opacity","cursor","RowButton","add","buttonSize","height","tilesAddable","tilesSubtractable","lineHeight","borderRadius","c","addTileToRow","subtractTileFromRow","text","EdgeButton_EdgeButton","assign","Row","boardSize","borderBottom","borderTop","borderLeft","borderRight","RowButton_RowButton","lib","onSwipeRight","onSwipeLeft","map","v","k","Tile_Tile","key","BoardButton","rowsAddable","rowsSubtractable","display","margin","subtractRow","Board","marginTop","size","BoardButton_BoardButton","onSwipeUp","onSwipeDown","slice","reverse","Row_Row","theme","createMuiTheme","palette","type","typography","useNextVariants","Controls","openModal","buttonStyle","styles","AppBar_default","position","color","alignItems","Toolbar_default","IconButton_default","disabled","PlayArrow_default","Stop_default","Shuffle_default","FormControlLabel_default","control","Checkbox_default","checked","onChange","toggleAuto","label","variant","HelpOutline_default","require","AboutModal","modalOpen","closeModal","windowDimensions","headingStyle","fontFamily","fontWeight","textAlign","top","Modal_default","open","onClose","Typography_default","href","target","flex","justifyContent","flexDirection","Button_default","Tone","Transport","PPQ","bpm","App","possibleConstructorReturn","getPrototypeOf","call","updateWindowDimensions","windowWidth","window","innerWidth","windowHeight","innerHeight","whitespaceHeight","setState","state","synth","PolySynth","Synth","toMaster","scheduleRepeat","time","ticksPerBar","ticks","triggerAttackRelease","midiNote","prevState","start","cancel","fn","addEventListener","set","decay","sustain","release","src_Controls","src_AboutModal_0","Board_Board","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e5a35a4.chunk.js","sourcesContent":["const MINROWS = 1\nconst MAXROWS = 6\nconst MINWIDTH = 1\nconst MAXWIDTH = 9\nconst CHANCEOFREST = 0.3\nconst NOTES = [0, 'C', 'D', 'E', 'G', 'A']\nconst SUBDIVS = [2,3,4,5,8]\nconst INITIALROWS = 4\nconst AUTOBARS = 4\n\nclass Composition {\n  constructor(){\n    this.playing = false\n    this.rows = []\n    this.randomiseNext = false\n    this.firstBar = true\n    this.auto = true\n    this.randomise()\n    this.barCount = 1\n  }\n  change(row, col){\n    this.rows[row].tiles[col].change()\n  }\n  toggleAuto(){\n    this.auto = !this.auto\n    if (this.auto) {\n      this.barCount = 1\n    }\n  }\n  tilesToPlayAtPosition = (current, total)=>{\n    const tiles = []\n    const lastStep = current === total - 1\n    for(const row of this.rows){\n      const tileCount = row.tiles.length\n      for(const tile of row.tiles){\n        const note = NOTES[tile.note]\n        const tileSteps = Math.floor(total / row.tiles.length)\n        const tileStart = Math.ceil(tile.col * total / tileCount)\n        const tileHalf = tileStart + (tileSteps / 2)\n        // const tileEnd = Math.ceil((tile.col + 1) * total / tileCount) - 1\n        const playNow = current === tileStart\n        const isPlaying = current >= tileStart &&\n          current < tileHalf\n        const firstBarFirstNote = (this.firstBar && tile.col === 0)\n        if (note !== 0 && isPlaying) {\n          if (!tile.isPlaying) {\n            tile.isPlaying = true\n            tile.duration = 1 / row.tiles.length\n            if (playNow || firstBarFirstNote) {\n              tiles.push(tile)\n            }\n          }\n        } else {\n          tile.isPlaying = false\n        }\n      }\n    }\n    if (lastStep) {\n      this.firstBar = false\n      if (this.randomiseNext === true) {\n        this.randomiseRows()\n      } else if (this.auto === true) {\n        this.barCount++\n        if (this.barCount >= AUTOBARS) {\n          this.randomiseNext = true\n        }\n      }\n    }\n    return tiles\n  }\n  play = ()=>{\n    this.playing = true\n    this.firstBar = true\n  }\n  stop = ()=>{\n    this.playing = false\n    this.randomiseNext = false\n    this.barCount = 1\n  }\n  randomise = ()=>{\n    if (this.playing === true) {\n      this.randomiseNext = true\n    } else {\n      this.randomiseRows()\n    }\n  }\n  randomiseRows = ()=>{\n    this.rows = []\n    this.randomiseNext = false\n    this.barCount = 1\n    let numberOfRows = INITIALROWS\n    for(let i = 0; i < numberOfRows; i++){\n      this.addRow()\n    }\n  }\n  addRow(){\n    this.rows.length < MAXROWS && this.rows.push(new CompositionRow(this.rows.length))\n  }\n  subtractRow(){\n    this.rows.length > MINROWS && this.rows.pop()\n  }\n  addTileToRow(row){\n    this.rows[row].addTile()\n  }\n  subtractTileFromRow(row){\n    this.rows[row].subtractTile()\n  }\n  rowsAddable(){\n    return this.rows.length < MAXROWS\n  }\n  rowsSubtractable(){\n    return this.rows.length > MINROWS\n  }\n}\n\nclass CompositionRow {\n  constructor(row){\n    this.tiles = []\n    this.row = row\n    this.randomise()\n  }\n  randomise(){\n    let numberOfTiles = SUBDIVS[Math.floor(Math.random() * SUBDIVS.length)]\n    for(let i = 0; i < numberOfTiles; i++){\n      this.addTile(true)\n    }\n  }\n  addTile(random = false){\n    this.tiles.length < MAXWIDTH && this.tiles.push(new CompositionTile(this.row, this.tiles.length, random))\n  }\n  subtractTile(){\n    this.tiles.length > MINWIDTH && this.tiles.pop()\n  }\n  tilesAddable(){\n    return this.tiles.length < MAXWIDTH\n  }\n  tilesSubtractable(){\n    return this.tiles.length > MINWIDTH\n  }\n}\n\nclass CompositionTile {\n  constructor(row, col, randomise=false){\n    this.note = 0\n    this.duration = 0\n    this.row = row\n    this.col = col\n    this.isPlaying = false\n    randomise && this.randomise()\n  }\n  change(){\n    this.note = (this.note + 1) % 6\n  }\n  randomise(){\n    if (Math.random() > CHANCEOFREST){\n      this.note = Math.floor(Math.random() * (NOTES.length - 1)) + 1\n    }\n  }\n  midiNote(){\n    return NOTES[this.note] + (this.row + 2).toString()\n  }\n}\n\nexport default Composition","import React, { Component } from 'react';\nimport './Tile.scss';\n\nconst colours = [\n  \"#FFFFFF\", // white\n  \"#F70F0F\", // red\n  \"#FCD318\", // yellow\n  \"#344D90\", // blue\n  \"#A3A3A3\", // grey\n  \"#212121\" // black\n]\n\nexport default class Tile extends Component {\n  render(){\n    const {tile, composition, updateComposition, border} = this.props\n    const colour = colours[tile.note]\n    const row = composition.rows[tile.row]\n    const width = (100 / row.tiles.length) + \"%\"\n    const onClick = () => updateComposition((composition)=>{\n              composition.change(tile.row, tile.col)})\n    return (\n      <div className=\"Tile\"\n        style={{ width: width, background: colour, border: border.string }}\n          onClick={onClick}\n      >\n        <div \n          className={tile.isPlaying ? \"TileFlasher playing\" : \"TileFlasher\"} >\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nexport default class EdgeButton extends Component {\n  render(){\n    const {desktop, children} = this.props\n    let {style, enabled, onClick} = this.props\n    if(!desktop || !enabled){\n      style = {...style,  opacity: 0, cursor: \"default\" }\n    }\n    let className = \"compButton\"\n    return (\n        <div className={className} onClick={desktop && enabled ? onClick : undefined}\n            style={style}>{children}</div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport EdgeButton from './EdgeButton'\n\nexport default class RowButton extends Component {\n  render(){\n    const {add, buttonSize, row, height, updateComposition, border} = this.props\n    const addTile = () => updateComposition((c)=>{\n              c.addTileToRow(row.row)})\n    const subtractTile = () => updateComposition((c)=>{\n              c.subtractTileFromRow(row.row)})\n    const enabled = add ? row.tilesAddable() : row.tilesSubtractable()\n    let style = {\n      height: height - (2 * border.value) + \"px\",\n      lineHeight: height + \"px\",\n      width: buttonSize + \"px\",\n      borderRadius: add ? \"0px 10px 10px 0px\" : \"10px 0 0 10px\"\n    }\n    let onClick = (add ? addTile : subtractTile)\n    const text = add ? \"+\" : \"–\"\n    return (\n        <EdgeButton {...this.props} onClick={onClick}\n            style={style} enabled={enabled} >{text}</EdgeButton>\n    )\n  }\n}","import React, { Component } from 'react'\nimport {Swipeable} from 'react-touch'\nimport Tile from './Tile'\nimport RowButton from './RowButton'\nimport './Row.scss'\n\nexport default class Row extends Component {\n  render(){\n    const {row, composition, updateComposition, boardSize, border, buttonSize} = this.props\n    const height = ((boardSize - (2 * buttonSize) - (2 * border.value)) / composition.rows.length)\n    const style = {\n      height: height + \"px\",\n      borderBottom: row.row === 0 ? border.string : \"\",\n      borderTop: row.row === (composition.rows.length - 1) ? border.string : \"\",\n      borderLeft: border.string,\n      borderRight: border.string\n    }\n    const addTile = () => updateComposition((c)=>{\n              c.addTileToRow(row.row)})\n    const subtractTile = () => updateComposition((c)=>{\n              c.subtractTileFromRow(row.row)})\n    return (\n      <div className=\"Row\">\n        <RowButton {...this.props} add={false} height={height}/>\n        <Swipeable onSwipeRight={subtractTile} onSwipeLeft={addTile} >\n          <div className=\"RowInner\" style={style}>\n            { row.tiles.map((v, k) => \n              <Tile {...this.props} tile={v} key={k} /> )\n            }\n          </div>\n        </Swipeable>\n        <RowButton {...this.props} add={true} height={height}/>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport EdgeButton from './EdgeButton'\n\nexport default class BoardButton extends Component {\n  render(){\n    const {add, composition, buttonSize, updateComposition} = this.props\n    const addRow = () => updateComposition((c)=>{\n              c.addRow()})\n    const subtractRow = () => updateComposition((c)=>{\n              c.subtractRow()})\n    const enabled = \n      add ? composition.rowsAddable() : composition.rowsSubtractable()\n    let style = {\n      display: \"block\",\n      lineHeight: buttonSize + \"px\", \n      height: buttonSize + \"px\",\n      margin: \"0 \" + buttonSize + \"px\",\n      borderRadius: add ? \"10px 10px 0 0\" : \"0 0 10px 10px\"\n    } \n    let onClick = add ? addRow : subtractRow\n    const text = add ? \"+\" : \"–\"\n    return (\n        <EdgeButton {...this.props} onClick={onClick}\n            style={style} enabled={enabled}>{text}</EdgeButton>\n    )\n  }\n}","import React, { Component } from 'react';\nimport {Swipeable} from 'react-touch'\nimport Row from './Row';\nimport BoardButton from './BoardButton'\nimport './Board.scss';\n\nexport default class Board extends Component {\n  render(){\n    const {composition, boardSize, marginTop, updateComposition} = this.props\n    const size = boardSize.toString() + \"px\"\n    const addRow = () => updateComposition((c)=>{\n              c.addRow()})\n    const subtractRow = () => updateComposition((c)=>{\n              c.subtractRow()})\n    return (\n      <div className=\"Board\" style={{ width: size, height: size, marginTop: marginTop }}>\n        <BoardButton {...this.props} add={true} />\n        <Swipeable onSwipeUp={subtractRow} onSwipeDown={addRow} >\n          <div className=\"BoardInner\">\n            { composition.rows.slice().reverse().map((v, k) => \n              <Row {...this.props} key={k} row={v} /> )\n            }\n          </div>\n        </Swipeable>\n        <BoardButton {...this.props} add={false} />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport StopIcon from '@material-ui/icons/Stop'\nimport ShuffleIcon from '@material-ui/icons/Shuffle'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nclass Controls extends Component {\n  render(){\n    const {composition, play, stop, updateComposition, openModal} = this.props\n    const appBarStyle = {alignItems: 'center'}\n    const buttonStyle = {margin: '2px'}\n    const randomise = () => updateComposition((composition) => {\n      composition.randomise()\n    })\n    return (\n      <MuiThemeProvider theme={theme}>\n        <AppBar position=\"static\" color='default' style={appBarStyle}>\n        <Toolbar>\n        <IconButton  onClick={play} disabled={composition.playing} style={buttonStyle}><PlayArrowIcon /></IconButton>\n        <IconButton size=\"small\" onClick={stop} disabled={!composition.playing} style={buttonStyle}><StopIcon /></IconButton>\n        <IconButton size=\"small\" onClick={randomise} disabled={composition.randomiseNext} style={buttonStyle}><ShuffleIcon /></IconButton>\n        <FormControlLabel\n          style={buttonStyle}\n          control={\n          <Checkbox\n                checked={composition.auto}\n                color=\"primary\"\n                onChange={()=>updateComposition((c)=>c.toggleAuto())}\n                value=\"AUTO\"\n              />\n            }\n            label=\"AUTO\"\n        />\n        <IconButton size=\"small\" variant=\"contained\" onClick={openModal} style={buttonStyle}><HelpOutlineIcon /></IconButton>\n        </Toolbar>\n        </AppBar>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default Controls;","import React, { Component } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport './AboutModal.scss'\nrequire('typeface-lato')\n\nclass AboutModal extends Component {\n  render(){\n    const {modalOpen, closeModal, windowDimensions, desktop} = this.props\n    const centerVertically = {display: \"flex\", justifyContent: \"center\", flexDirection: \"column\"}\n    const className = desktop ? \"AboutModal\" : \"AboutModal mobile\"\n    const lato = {fontFamily: \"Lato\"}\n    const headingStyle = {...lato, fontWeight: 700, textAlign: \"center\", color: \"#212121\"}\n    const top = (windowDimensions.height - 400) / 2\n    return (\n      <Modal open={modalOpen} onClose={closeModal}>\n        <div className={className} style={{top: top}}>\n          <Typography variant=\"display1\" style={headingStyle}>\n            Mondrian Sequencer\n          </Typography>\n          <Typography variant=\"subtitle2\" style={{textAlign: \"center\"}}>\n            Code: <a href=\"https://www.github.com/ryanmonro/mondrian\"\n              target=\"_new\">github.com/ryanmonro/mondrian</a>\n          </Typography>\n          <Typography variant=\"body1\" style={{flex: 3}}>\n            Each row represents an octave.<br />\n            Tile colour determines the note.<br />\n            Tile width determines note length.<br />\n            Click the edge buttons (or swipe on mobile) to add/subtract tiles or rows.<br />\n            Auto mode randomises the board every four bars.\n          </Typography>\n          <div style={centerVertically}>\n            <Button variant=\"contained\" onClick={closeModal}>OK</Button>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default AboutModal","import React, { Component } from 'react'\nimport './App.css'\nimport Tone from 'tone'\nimport Composition from './Composition'\nimport Board from './Board'\nimport Controls from './Controls'\nimport AboutModal from './AboutModal'\n\nTone.Transport.PPQ = 12\nTone.Transport.bpm.value = 90\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      modalOpen: false,\n      openModal: ()=> this.setState({modalOpen: true}),\n      closeModal: ()=> this.setState({modalOpen: false}),\n      composition: new Composition(),\n      synth: new Tone.PolySynth(8, Tone.Synth).toMaster(),\n      play: () => {\n        Tone.Transport.scheduleRepeat((time)=>{\n          const ticksPerBar = Tone.Transport.PPQ * 4\n          const position = (Tone.Transport.ticks) % ticksPerBar\n          const c = this.state.composition\n          const tiles = c.tilesToPlayAtPosition(position, ticksPerBar)\n          for(const tile of tiles){\n            const duration = 60 * 4 * tile.duration / Tone.Transport.bpm.value / 2\n            this.state.synth.triggerAttackRelease(tile.midiNote(), duration, time)\n          }\n          if (tiles.length > 0 || position === ticksPerBar - 1) {\n            this.setState((prevState)=>{\n              return {composition: c}\n            })\n          }\n          \n        }, \"1i\")\n        Tone.start()\n        Tone.Transport.start()\n        this.state.updateComposition((c)=>{\n          c.play()\n        })\n      },\n      stop: () => {\n        Tone.Transport.stop()\n        Tone.Transport.cancel()\n        this.state.updateComposition((c)=>{\n          c.stop()\n        })\n      },\n      updateComposition: (fn) => {\n        this.setState((prevState) => {\n          fn(prevState.composition)\n          return {composition: prevState.composition}\n        })\n      }\n    }\n  }\n  updateWindowDimensions = () => {\n    const windowWidth = window.innerWidth\n    const windowHeight = window.innerHeight\n    const desktop = windowWidth > 600\n    const whitespaceHeight = windowHeight - 64 \n    const boardSize = whitespaceHeight < windowWidth ? whitespaceHeight : windowWidth\n    const border = boardSize / 200 // 1% (halved, there are always 2 borders)\n    this.setState({\n      boardSize: boardSize, \n      border: {\n        string: border + \"px solid #212121\",\n        value: border\n      },\n      buttonSize: desktop ? 40 : 20,\n      marginTop: (whitespaceHeight - boardSize) / 2,\n      desktop: desktop,\n      windowDimensions: {\n        height: windowHeight,\n        width: windowWidth\n      }\n    })\n\n  }\n  componentWillMount(){\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n\n  }\n  componentDidMount(){\n    const synth = this.state.synth\n    synth.set(\"oscillator\", {\"type\": \"sine\"})\n    synth.set(\"volume\", -12)\n    synth.set(\"envelope\", {decay: 0.2, sustain: 0.3, release: 0.4})\n    // synth.set('filter', {Q: 0, rolloff: -12})\n    // synth.set(\"filterEnvelope\", {attack: 0.01, octaves: 1, decay: 0.8,\n      // baseFrequency: 2000, release: 2})\n    this.setState({synth: synth})\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Controls {...this.state} />\n        <AboutModal {...this.state} />\n        <Board {...this.state} />\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}