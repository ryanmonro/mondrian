{"version":3,"sources":["Tile.js","Row.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["colours","black","red","yellow","blue","grey","white","Tile","react_default","a","createElement","className","this","props","playing","style","width","onClick","functions","change","data-row","row","data-col","col","background","index","value","Object","keys","Component","Row","cols","position","percent","_this","_this$props","data","subtract","lineHeight","height","map","v","k","Tile_Tile","key","length","toString","tileIsPlaying","add","Board","subtractRow","Row_Row","addRow","randomBoard","board","Math","ceil","random","i","t","push","floor","theme","createMuiTheme","palette","type","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","checked","synths","Tone","Synth","oscillator","toMaster","start","bind","assertThisInitialized","state","fullAuto","addTile","subtractTile","_this2","Transport","PPQ","scheduleRepeat","time","_this2$state","playPosition","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","newPos","note","console","log","triggerAttackRelease","err","return","newData","e","_e$target$dataset","dataset","oldValue","parentNode","pop","styles","Button_default","variant","color","FormControlLabel_default","paddingLeft","control","Switch_default","onChange","label","Board_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.248c3ada.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Tile.scss';\n\nconst colours = {\n  \"black\": \"#212121\",\n  \"red\": \"#F70F0F\",\n  \"yellow\": \"#FCD318\",\n  // \"blue\": \"#0F7FBF\",\n  // \"blue\": \"#17105D\",\n  \"blue\": \"#344D90\",\n  \"grey\": \"#A3A3A3\",\n  \"white\": \"#FFFFFF\"\n}\n\nconst colour = (index) => colours[Object.keys(colours)[index]]\n\nexport default class Tile extends Component {\n  render(){\n    return (\n      <div className={this.props.playing ? \"Tile playing\" : \"Tile\"}\n        style={{\n          width: this.props.width\n        }}\n      >\n        <div \n          className=\"TileInner\" \n          onClick={this.props.functions.change}\n          data-row={this.props.row}\n          data-col={this.props.col}\n          style={{\n            background: colour(this.props.value)\n          }}>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport Tile from './Tile';\nimport './Row.scss';\n\nexport default class Row extends Component {\n  tileIsPlaying(col, cols){\n    const {position} = this.props\n    const percent = position / 100\n    if (position === 0) return false\n    return percent >= col / cols && percent <= (col + 1) / cols\n  }\n  render(){\n    let {data, row, functions} = this.props\n    return (\n      <div className=\"RowOuter\" data-row={row} >\n        <div className=\"rowButton subtract\" \n          onClick={ functions.subtract }\n          style={{ lineHeight: this.props.height }} >\n          –\n        </div>\n        <div className=\"Row\" style={{ height: this.props.height }}>\n          { data.map((v, k) => \n            <Tile value={v} key={k} row={row} col={k} \n              functions={functions} \n              width={ (100 / data.length).toString() + \"%\" }\n              playing={ this.tileIsPlaying(k, data.length) }\n            >\n            </Tile> ) \n          }\n        </div>\n        <div className=\"rowButton add\" onClick={ functions.add }\n          style={{ lineHeight: this.props.height }} >\n          +\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport Row from './Row';\nimport './Board.css';\n\nexport default class Board extends Component {\n  render(){\n    let {data, functions, position} = this.props\n    return (\n      <div className=\"Board\">\n        <div className=\"rowButton long subtract\" onClick={functions.subtractRow}>–</div>\n        { data.map((v, k) => \n          <Row data={v} key={k} row={k} \n            functions={functions} \n            position={position} \n            height={ (800 / data.length).toString() + \"px\" }>\n          </Row> ) }\n        <div className=\"rowButton long add\" onClick={functions.addRow}>+</div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './Board';\nimport Tone from 'tone';\nimport Button from '@material-ui/core/Button';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormGroup from '@material-ui/core/FormGroup';\n// import { withStyles } from '@material-ui/core/styles';\n\nfunction randomBoard(){\n  let board = []\n  const height = Math.ceil(Math.random() * 6)\n  for(var i = 0; i < height; i++){\n    var row = []\n    let width = Math.ceil(Math.random() * 8)\n    for(var t = 0; t < width; t++){\n      row.push(Math.floor(Math.random() * 6))\n    }\n    board.push(row)\n  }\n  return board\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n});\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let synths = []\n    for (let i = 0; i < 6; i++){\n      synths.push(new Tone.Synth({\n        oscillator  : {\n          type  : \"sine\"\n        }\n      }).toMaster())\n    }\n    this.start = this.start.bind(this)\n    this.state = {\n      data: randomBoard(),\n      position: 0,\n      synths: synths,\n      fullAuto: false,\n      functions: {\n        'change': this.change.bind(this),\n        'add': this.addTile.bind(this),\n        'subtract': this.subtractTile.bind(this),\n        'addRow': this.addRow.bind(this),\n        'subtractRow': this.subtractRow.bind(this)\n      },\n    }\n\n  }\n  componentDidMount(){\n    Tone.Transport.PPQ = 24\n    Tone.Transport.scheduleRepeat((time)=>{\n      let {position, data, playPosition, synths} = this.state\n      for(const [i, row] of data.entries()){\n        const notes = [0, 'C', 'D', 'E', 'G', 'A']\n        let newPos = Math.floor((position / 100) * row.length)\n        if (playPosition[i] !== newPos) {\n          playPosition[i] = newPos\n          if (playPosition[i] === row.length) {\n            playPosition[i] = 0\n          }\n          const note = notes[row[playPosition[i]]]\n          console.log(note, row, playPosition, i)\n          if(note !== 0){\n            synths[i].triggerAttackRelease(note + (i + 2).toString(), \"16n\", time)\n          }\n        }\n      }\n      if (position >= 100) {\n        position = 1\n        if (this.state.fullAuto){\n          const newData = randomBoard()\n          this.setState({data: newData})\n        }\n      } else {\n        position += (100 / (24 * 4))\n      }\n      this.setState({position: position, playPosition: playPosition})\n    }, \"1i\")\n  }\n  change(e){\n    const {row, col} = e.target.dataset\n    let data = this.state.data\n    let oldValue = data[row][col]\n    data[row][col] = (oldValue + 1) % 6\n    this.setState({data: data})\n  }\n  addTile(e){\n    let data = this.state.data\n    const row = e.target.parentNode.dataset.row\n    if (data[row].length < 9){\n      data[row].push(0)\n      this.setState({data: data})\n    }\n  }\n  subtractTile(e){\n    let data = this.state.data\n    const row = e.target.parentNode.dataset.row\n    if (data[row].length > 1){\n      data[row].pop()\n      this.setState({data: data})\n    }\n  }\n  addRow(){\n    let data = this.state.data\n    if (data.length < 6){\n      data.push([0,0,0,0])\n      this.setState({data: data})\n    }\n  }\n  subtractRow(){\n    let data = this.state.data\n    if (data.length > 1){\n      data.pop()\n      this.setState({data: data})\n    }\n  }\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  }\n  start(){\n    Tone.Transport.start()\n    Tone.start()\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    this.setState({position: 1, playPosition: playPosition})\n  }\n  render() {\n    let data = this.state.data\n    return (\n      <div className=\"App\">\n        <div className=\"controls\">\n        <MuiThemeProvider theme={theme}>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.start}>Start</Button>\n          <FormControlLabel\n          style={{paddingLeft: \"20px\"}}\n          control={\n            <Switch\n              color=\"primary\"\n              checked={this.state.fullAuto}\n              onChange={this.handleChange('fullAuto')}\n              value=\"fullAuto\"\n            />\n          }\n          label=\"Full Auto\"\n          />\n        </MuiThemeProvider>\n        </div>\n        <Board data={data} position={this.state.position} functions={this.state.functions}>\n        </Board>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}