{"version":3,"sources":["Tile.js","Row.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["colours","black","red","yellow","blue","grey","white","Tile","react_default","a","createElement","className","this","props","playing","style","width","onClick","functions","change","data-row","row","data-col","col","background","index","value","Object","keys","Component","Row","cols","position","percent","_this","_this$props","data","subtract","lineHeight","height","map","v","k","Tile_Tile","key","length","toString","tileIsPlaying","add","Board","subtractRow","Row_Row","addRow","randomBoard","board","Math","ceil","random","i","t","push","floor","theme","createMuiTheme","palette","type","typography","useNextVariants","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","synths","Tone","Synth","oscillator","volume","toMaster","start","bind","assertThisInitialized","stop","randomise","state","randomiseNext","randomiseInterval","addTile","subtractTile","_this2","Transport","PPQ","scheduleRepeat","time","_this2$state","playPosition","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","newPos","note","triggerAttackRelease","err","return","newData","e","_e$target$dataset","dataset","oldValue","parentNode","pop","margin","float","styles","AppBar_default","color","Toolbar_default","Button_default","variant","disabled","buttonStyle","PlayArrow_default","Stop_default","Board_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6dcc9004.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Tile.scss';\n\nconst colours = {\n  \"black\": \"#212121\",\n  \"red\": \"#F70F0F\",\n  \"yellow\": \"#FCD318\",\n  // \"blue\": \"#0F7FBF\",\n  // \"blue\": \"#17105D\",\n  \"blue\": \"#344D90\",\n  \"grey\": \"#A3A3A3\",\n  \"white\": \"#FFFFFF\"\n}\n\nconst colour = (index) => colours[Object.keys(colours)[index]]\n\nexport default class Tile extends Component {\n  render(){\n    return (\n      <div className={this.props.playing ? \"Tile playing\" : \"Tile\"}\n        style={{\n          width: this.props.width\n        }}\n      >\n        <div \n          className=\"TileInner\" \n          onClick={this.props.functions.change}\n          data-row={this.props.row}\n          data-col={this.props.col}\n          style={{\n            background: colour(this.props.value)\n          }}>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport Tile from './Tile';\nimport './Row.scss';\n\nexport default class Row extends Component {\n  tileIsPlaying(col, cols){\n    const {position} = this.props\n    const percent = position / 100\n    if (position === 0) return false\n    return percent >= col / cols && percent <= (col + 1) / cols\n  }\n  render(){\n    let {data, row, functions} = this.props\n    return (\n      <div className=\"RowOuter\" data-row={row} >\n        <div className=\"rowButton subtract\" \n          onClick={ functions.subtract }\n          style={{ lineHeight: this.props.height }} >\n          â€“\n        </div>\n        <div className=\"Row\" style={{ height: this.props.height }}>\n          { data.map((v, k) => \n            <Tile value={v} key={k} row={row} col={k} \n              functions={functions} \n              width={ (100 / data.length).toString() + \"%\" }\n              playing={ this.tileIsPlaying(k, data.length) }\n            >\n            </Tile> ) \n          }\n        </div>\n        <div className=\"rowButton add\" onClick={ functions.add }\n          style={{ lineHeight: this.props.height }} >\n          +\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport Row from './Row';\nimport './Board.css';\n\nexport default class Board extends Component {\n  render(){\n    let {data, functions, position} = this.props\n    return (\n      <div className=\"Board\">\n        <div className=\"rowButton long subtract\" onClick={functions.subtractRow}>â€“</div>\n        { data.map((v, k) => \n          <Row data={v} key={k} row={k} \n            functions={functions} \n            position={position} \n            height={ (800 / data.length).toString() + \"px\" }>\n          </Row> ) }\n        <div className=\"rowButton long add\" onClick={functions.addRow}>+</div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './App.css'\nimport Board from './Board'\nimport Tone from 'tone'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport StopIcon from '@material-ui/icons/Stop'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\n\nfunction randomBoard(){\n  let board = []\n  const height = Math.ceil(Math.random() * 6)\n  for(var i = 0; i < height; i++){\n    var row = []\n    let width = Math.ceil(Math.random() * 8)\n    for(var t = 0; t < width; t++){\n      row.push(Math.floor(Math.random() * 6))\n    }\n    board.push(row)\n  }\n  return board\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let synths = []\n    for (let i = 0; i < 6; i++){\n      synths.push(new Tone.Synth({\n        oscillator: {\n          type: \"sine\"\n        },\n        volume: -12\n      }).toMaster())\n    }\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.randomise = this.randomise.bind(this)\n    this.state = {\n      data: randomBoard(),\n      position: 0,\n      playing: false,\n      synths: synths,\n      randomiseNext: false,\n      randomiseInterval: 4,\n      functions: {\n        'change': this.change.bind(this),\n        'add': this.addTile.bind(this),\n        'subtract': this.subtractTile.bind(this),\n        'addRow': this.addRow.bind(this),\n        'subtractRow': this.subtractRow.bind(this)\n      },\n    }\n\n  }\n  componentDidMount(){\n    Tone.Transport.PPQ = 24\n    Tone.Transport.scheduleRepeat((time)=>{\n      let {position, data, playPosition, synths} = this.state\n      for(const [i, row] of data.entries()){\n        const notes = [0, 'C', 'D', 'E', 'G', 'A']\n        let newPos = Math.floor((position / 100) * row.length)\n        if (playPosition[i] !== newPos) {\n          playPosition[i] = newPos\n          if (playPosition[i] === row.length) {\n            playPosition[i] = 0\n          }\n          const note = notes[row[playPosition[i]]]\n          if(note !== 0){\n            synths[i].triggerAttackRelease(note + (i + 2).toString(), \"16n\", time)\n          }\n        }\n      }\n      if (position >= 100) {\n        position = 1\n        if (this.state.randomiseNext === true){\n          const newData = randomBoard()\n          this.setState({data: newData, randomiseNext: false})\n        }\n      } else {\n        position += (100 / (24 * 4))\n      }\n      this.setState({position: position, playPosition: playPosition})\n    }, \"1i\")\n  }\n  randomise(){\n    if (this.state.playing === true) {\n      this.setState({randomiseNext: true})\n    } else {\n      const newData = randomBoard()\n      this.setState({data: newData})\n    }\n  }\n  change(e){\n    const {row, col} = e.target.dataset\n    let data = this.state.data\n    let oldValue = data[row][col]\n    data[row][col] = (oldValue + 1) % 6\n    this.setState({data: data})\n  }\n  addTile(e){\n    let data = this.state.data\n    const row = e.target.parentNode.dataset.row\n    if (data[row].length < 9){\n      data[row].push(0)\n      this.setState({data: data})\n    }\n  }\n  subtractTile(e){\n    let data = this.state.data\n    const row = e.target.parentNode.dataset.row\n    if (data[row].length > 1){\n      data[row].pop()\n      this.setState({data: data})\n    }\n  }\n  addRow(){\n    let data = this.state.data\n    if (data.length < 6){\n      data.push([0,0,0,0])\n      this.setState({data: data})\n    }\n  }\n  subtractRow(){\n    let data = this.state.data\n    if (data.length > 1){\n      data.pop()\n      this.setState({data: data})\n    }\n  }\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n  start(){\n    Tone.Transport.start()\n    Tone.start()\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    this.setState({position: 1, playPosition: playPosition, playing: true})\n  }\n  stop(){\n    Tone.Transport.stop()\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    this.setState({position: 0, playPosition: playPosition, playing: false, randomiseNext: false})\n  }\n  buttonStyle(){\n    return {margin: '5px', float: 'left'}\n  }\n  render() {\n    let data = this.state.data\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\" color='default'>\n          <Toolbar>\n          <Button variant=\"contained\" onClick={this.start} disabled={this.state.playing} style={this.buttonStyle()}><PlayArrowIcon /></Button>\n          <Button variant=\"contained\" onClick={this.stop} disabled={!this.state.playing} style={this.buttonStyle()}><StopIcon /></Button>\n          <Button variant=\"contained\" onClick={this.randomise} disabled={this.state.randomiseNext} style={this.buttonStyle()}>Randomise</Button>\n          </Toolbar>\n          </AppBar>\n        </MuiThemeProvider>\n        <Board data={data} position={this.state.position} functions={this.state.functions}>\n        </Board>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}