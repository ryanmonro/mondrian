{"version":3,"sources":["Tile.js","Row.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["colours","white","red","yellow","blue","grey","black","Tile","Object","keys","this","props","note","_this$props","player","col","cols","percent","position","_this$props2","change","width","toString","react_default","a","createElement","className","isPlaying","style","onClick","background","colour","Component","Row","board","row","ui","index","height","data","length","desktop","functions","subtractTile","undefined","lineHeight","lib","onSwipeRight","onSwipeLeft","addTile","borderTop","borderBottom","map","v","k","Tile_Tile","key","changeTile","Board","subtractRow","onSwipeUp","addRow","onSwipeDown","Row_Row","settings","minHeight","maxHeight","maxWidth","notes","chanceOfRest","subdivs","randomBoard","i","Math","floor","random","t","ceil","push","theme","createMuiTheme","palette","type","typography","useNextVariants","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","value","synths","Tone","Synth","oscillator","volume","toMaster","start","bind","assertThisInitialized","stop","randomise","updateWindowDimensions","state","windowWidth","windowHeight","pop","playing","randomiseNext","randomiseInterval","window","addEventListener","Transport","PPQ","bpm","removeEventListener","innerWidth","innerHeight","newData","_this2","scheduleRepeat","time","_this2$state","playPosition","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","newPos","triggerAttackRelease","err","return","cancel","margin","float","_this$state","styles","AppBar_default","color","Toolbar_default","Button_default","variant","disabled","buttonStyle","PlayArrow_default","Stop_default","Board_Board","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e997692.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Tile.scss';\n\nconst colours = {\n  \"white\": \"#FFFFFF\",\n  \"red\": \"#F70F0F\",\n  \"yellow\": \"#FCD318\",\n  \"blue\": \"#344D90\",\n  \"grey\": \"#A3A3A3\",\n  \"black\": \"#212121\",\n}\n\nexport default class Tile extends Component {\n  colour(){\n    return colours[Object.keys(colours)[this.props.note]]\n  }\n  isPlaying(){\n    const {player, col, cols} = this.props\n    const percent = player.position / 100\n    if (player.position === 0) return false\n    return percent >= col / cols && percent <= (col + 1) / cols\n  }\n  render(){\n    let {change, cols} = this.props\n    let width = (100 / cols).toString() + \"%\"\n    return (\n      <div className={this.isPlaying() ? \"Tile playing\" : \"Tile\"}\n        style={{ width: width }}\n      >\n        <div \n          className=\"TileInner\" \n          onClick={change}\n          style={{\n            background: this.colour()\n          }}>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport {Swipeable} from 'react-touch'\nimport Tile from './Tile'\nimport './Row.scss'\n\nexport default class Row extends Component {\n  render(){\n    let {board, row, ui, index, player} = this.props\n    const height = (ui.height / board.data.length).toString() + \"px\"\n    return (\n      <div className=\"RowOuter\">\n        <div className=\"rowButtonOuter left\">\n          <div className=\"rowButton subtract\" \n            onClick={ ui.desktop ? ()=>board.functions.subtractTile(index) : undefined }\n            style={{ lineHeight: height }} >\n            –\n          </div>\n        </div>\n        <Swipeable onSwipeRight={()=>board.functions.subtractTile(index)} onSwipeLeft={()=>board.functions.addTile(index)} >\n        <div className=\"Row\" style={{ \n          height: height,\n          borderTop: index === 0 ? \"5px solid #212121\" : \"\",\n          borderBottom: index === (board.data.length - 1) ? \"5px solid #212121\" : \"\"\n        }}>\n          { row.map((v, k) => \n            <Tile note={v} key={k} cols={row.length} col={k} player={player}\n              change={ ()=>board.functions.changeTile(index, k) }\n            />\n            ) \n          }\n        </div>\n        </Swipeable>\n        <div className=\"rowButtonOuter right\">\n          <div className=\"rowButton add\" \n            onClick={ ui.desktop ? ()=>board.functions.addTile(index) : undefined }\n            style={{ lineHeight: height }} >\n            +\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport {Swipeable} from 'react-touch'\nimport Row from './Row';\nimport './Board.css';\n\nexport default class Board extends Component {\n  render(){\n    let {board, player, ui} = this.props\n    return (\n      <div className=\"boardOuter\">\n        <div className=\"longButtonOuter\">\n          <div className=\"rowButton long subtract\" onClick={ui.desktop ? board.functions.subtractRow : undefined}>–</div>\n          </div>\n          <Swipeable onSwipeUp={board.functions.addRow} onSwipeDown={board.functions.subtractRow} >\n        <div className=\"Board\">\n          { board.data.map((v, k) => \n            <Row row={v} key={k} index={k} board={board}\n              player={player} \n              ui={ui}\n            /> ) \n          }\n        </div>\n          </Swipeable>\n        <div className=\"longButtonOuter\">\n          <div className=\"rowButton long add\" onClick={ui.desktop ? board.functions.addRow : undefined}>+</div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './App.css'\nimport Board from './Board'\nimport Tone from 'tone'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport StopIcon from '@material-ui/icons/Stop'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\n\nconst settings = {\n  minHeight: 2,\n  maxHeight: 4,\n  maxWidth: 5,\n  notes: [0, 'C', 'D', 'E', 'G', 'A'],\n  chanceOfRest: 0.5,\n  subdivs: [3,4,5,6,8]\n}\n\nfunction randomBoard(){\n  let board = []\n  const height = 4\n  // settings.minHeight + Math.floor(Math.random() * (settings.maxHeight - settings.minHeight + 1))\n  for(var i = 0; i < height; i++){\n    var row = []\n    let width = settings.subdivs[Math.floor(Math.random() * 5)]\n    //Math.pow(2, Math.floor(Math.random() * 4))\n      // Math.ceil(Math.random() * settings.maxWidth))\n    for(var t = 0; t < width; t++){\n      let note = 0\n      if (Math.random() > settings.chanceOfRest){\n        note = Math.ceil(Math.random() * (settings.notes.length - 1))\n      }\n      row.push(note)\n    }\n    board.push(row)\n  }\n  return board\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let synths = []\n    for (let i = 0; i < 6; i++){\n      synths.push(new Tone.Synth({\n        oscillator: {\n          type: \"sine\"\n        },\n        volume: -12\n      }).toMaster())\n    }\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.randomise = this.randomise.bind(this)\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      board: {\n        data: randomBoard(),\n        functions: {\n          'changeTile': (row, col) => {\n            let {board} = this.state\n            board.data[row][col] = (board.data[row][col] + 1) % 6\n            this.setState({board: board})\n          },\n          'addTile': (row) => {\n            let {board} = this.state\n            if (board.data[row].length < 9){\n              board.data[row].push(0)\n              this.setState({board: board})\n            }\n          },\n          'subtractTile': (row) => {\n            let {board} = this.state\n            if (board.data[row].length > 1){\n              board.data[row].pop()\n              this.setState({board: board})\n            }\n          },\n          'addRow': () => {\n            let {board} = this.state\n            if (board.data.length < 6){\n              board.data.push([0,0,0,0])\n              this.setState({board: board})\n            }\n          },\n          'subtractRow': () => {\n            let {board} = this.state\n            if (board.data.length > 1){\n              board.data.pop()\n              this.setState({board: board})\n            }\n          }\n        },\n      },\n      player: {\n        position: 0,\n\n      },\n      playing: false,\n      synths: synths,\n      randomiseNext: false,\n      randomiseInterval: 4\n    }\n\n  }\n  componentDidMount(){\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    Tone.Transport.PPQ = 24\n    Tone.Transport.bpm.value = 60\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ windowWidth: window.innerWidth, windowHeight:window.innerHeight });\n  }\n  randomise(){\n    if (this.state.playing === true) {\n      this.setState({randomiseNext: true})\n    } else {\n      const newData = randomBoard()\n      let board = this.state.board\n      board.data = newData\n      this.setState({board: board})\n    }\n  }\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n  start(){\n    Tone.Transport.scheduleRepeat((time)=>{\n      let {player, board, playPosition, synths} = this.state\n      for(const [i, row] of board.data.entries()){\n        const notes = settings.notes\n        let newPos = Math.floor((player.position / 100) * row.length)\n        if (playPosition[i] !== newPos) {\n          playPosition[i] = newPos\n          if (playPosition[i] === row.length) {\n            playPosition[i] = 0\n          }\n          const note = notes[row[playPosition[i]]]\n          if(note !== 0){\n            synths[i].triggerAttackRelease(note + (i + 2).toString(), \"16n\", time)\n          }\n        }\n      }\n      if (player.position >= 100) {\n        player.position = 1\n        if (this.state.randomiseNext === true){\n          const newData = randomBoard()\n          let board = this.state.board\n          board.data = newData\n          this.setState({board: board, randomiseNext: false})\n        }\n      } else {\n        player.position += (100 / (24 * 4))\n      }\n      this.setState({player: player, playPosition: playPosition})\n    }, \"1i\")\n    Tone.Transport.start(\"+0.1\")\n    Tone.start()\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    let {player} = this.state\n    player.position = 1\n    this.setState({player: player, playPosition: playPosition, playing: true})\n  }\n  stop(){\n    Tone.Transport.stop()\n    Tone.Transport.cancel()\n    let {player} = this.state\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    player.position = 0\n    this.setState({player: player, playPosition: playPosition, playing: false, randomiseNext: false})\n  }\n  buttonStyle(){\n    return {margin: '5px', float: 'left'}\n  }\n  render() {\n    let {board, player} = this.state\n    let desktop = this.state.windowWidth > 600\n    let ui = {\n      desktop: desktop,\n      width: this.state.windowWidth,\n      height: desktop ? this.state.windowHeight - 160 : this.state.windowHeight - 110\n    }\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\" color='default'>\n          <Toolbar>\n          <Button variant=\"contained\" onClick={this.start} disabled={this.state.playing} style={this.buttonStyle()}><PlayArrowIcon /></Button>\n          <Button variant=\"contained\" onClick={this.stop} disabled={!this.state.playing} style={this.buttonStyle()}><StopIcon /></Button>\n          <Button variant=\"contained\" onClick={this.randomise} disabled={this.state.randomiseNext} style={this.buttonStyle()}>Randomise</Button>\n          </Toolbar>\n          </AppBar>\n        </MuiThemeProvider>\n        <Board board={board} player={player} ui={ui} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}