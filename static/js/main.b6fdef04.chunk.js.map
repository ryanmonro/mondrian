{"version":3,"sources":["Tile.js","Row.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["colours","black","red","yellow","blue","grey","white","Tile","index","_this","this","_this$props","props","row","functions","col","react_default","a","createElement","className","playing","style","width","onClick","change","background","value","Object","keys","Component","Row","cols","position","percent","data","height","desktop","board","subtract","undefined","lineHeight","lib","onSwipeRight","onSwipeLeft","add","borderTop","borderBottom","length","map","v","k","Tile_Tile","key","toString","tileIsPlaying","Board","subtractRow","onSwipeUp","addRow","onSwipeDown","Row_Row","settings","minHeight","maxHeight","maxWidth","notes","randomBoard","Math","floor","random","i","ceil","t","push","theme","createMuiTheme","palette","type","typography","useNextVariants","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","synths","Tone","Synth","oscillator","volume","toMaster","start","bind","assertThisInitialized","stop","randomise","updateWindowDimensions","state","windowWidth","windowHeight","randomiseNext","randomiseInterval","addTile","subtractTile","window","addEventListener","Transport","PPQ","removeEventListener","innerWidth","innerHeight","newData","oldValue","pop","_this2","scheduleRepeat","time","_this2$state","playPosition","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","newPos","note","triggerAttackRelease","err","return","cancel","margin","float","styles","AppBar_default","color","Toolbar_default","Button_default","variant","disabled","buttonStyle","PlayArrow_default","Stop_default","Board_Board","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6fdef04.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Tile.scss';\n\nconst colours = {\n  \"black\": \"#212121\",\n  \"red\": \"#F70F0F\",\n  \"yellow\": \"#FCD318\",\n  \"blue\": \"#344D90\",\n  \"grey\": \"#A3A3A3\",\n  \"white\": \"#FFFFFF\"\n}\n\nconst colour = (index) => colours[Object.keys(colours)[index]]\n\nexport default class Tile extends Component {\n  render(){\n    let {functions, row, col} = this.props\n    return (\n      <div className={this.props.playing ? \"Tile playing\" : \"Tile\"}\n        style={{\n          width: this.props.width\n        }}\n      >\n        <div \n          className=\"TileInner\" \n          onClick={()=>this.props.functions.change(row, col)}\n          style={{\n            background: colour(this.props.value)\n          }}>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport {Swipeable} from 'react-touch'\nimport Tile from './Tile'\nimport './Row.scss'\n\nexport default class Row extends Component {\n  tileIsPlaying(col, cols){\n    const {position} = this.props\n    const percent = position / 100\n    if (position === 0) return false\n    return percent >= col / cols && percent <= (col + 1) / cols\n  }\n  render(){\n    let {data, row, functions, height, desktop, board} = this.props\n    return (\n      <div className=\"RowOuter\">\n        <div className=\"rowButtonOuter left\">\n          <div className=\"rowButton subtract\" \n            onClick={ desktop ? ()=>functions.subtract(row) : undefined }\n            style={{ lineHeight: this.props.height }} >\n            –\n          </div>\n        </div>\n        <Swipeable onSwipeRight={()=>functions.subtract(row)} onSwipeLeft={()=>functions.add(row)} >\n        <div className=\"Row\" style={{ \n          height: height,\n          borderTop: row === 0 ? \"5px solid #212121\" : \"\",\n          borderBottom: row === (board.length - 1) ? \"5px solid #212121\" : \"\"\n        }}>\n          { data.map((v, k) => \n            <Tile value={v} key={k} row={row} col={k} \n              functions={functions} \n              width={ (100 / data.length).toString() + \"%\" }\n              playing={ this.tileIsPlaying(k, data.length) }\n            >\n            </Tile> ) \n          }\n        </div>\n        </Swipeable>\n        <div className=\"rowButtonOuter right\">\n          <div className=\"rowButton add\" \n            onClick={ desktop ? ()=>functions.add(row) : undefined }\n            style={{ lineHeight: this.props.height }} >\n            +\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport {Swipeable} from 'react-touch'\nimport Row from './Row';\nimport './Board.css';\n\nexport default class Board extends Component {\n  render(){\n    let {data, functions, position, height, desktop} = this.props\n    return (\n      <div className=\"boardOuter\">\n      <div className=\"longButtonOuter\">\n        <div className=\"rowButton long subtract\" onClick={desktop ? functions.subtractRow : undefined}>–</div>\n        </div>\n        <Swipeable onSwipeUp={functions.addRow} onSwipeDown={functions.subtractRow} >\n      <div className=\"Board\">\n        { data.map((v, k) => \n          <Row data={v} key={k} row={k} board={data}\n            functions={functions} \n            position={position} \n            height={ (height / data.length).toString() + \"px\" }\n            desktop={desktop}\n            >\n          </Row> ) }\n      </div>\n        </Swipeable>\n      <div className=\"longButtonOuter\">\n        <div className=\"rowButton long add\" onClick={desktop ? functions.addRow : undefined}>+</div>\n      </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './App.css'\nimport Board from './Board'\nimport Tone from 'tone'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport StopIcon from '@material-ui/icons/Stop'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\n\nconst settings = {\n  minHeight: 2,\n  maxHeight: 4,\n  maxWidth: 5,\n  notes: [0, 'C', 'D', 'E', 'G', 'A']\n\n}\n\nfunction randomBoard(){\n  let board = []\n  const height = settings.minHeight + Math.floor(Math.random() * (settings.maxHeight - settings.minHeight + 1))\n  for(var i = 0; i < height; i++){\n    var row = []\n    let width = Math.ceil(Math.random() * settings.maxWidth)\n    for(var t = 0; t < width; t++){\n      row.push(Math.floor(Math.random() * settings.notes.length))\n    }\n    board.push(row)\n  }\n  return board\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let synths = []\n    for (let i = 0; i < 6; i++){\n      synths.push(new Tone.Synth({\n        oscillator: {\n          type: \"sine\"\n        },\n        volume: -12\n      }).toMaster())\n    }\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.randomise = this.randomise.bind(this)\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      // board: {\n\n      // },\n      data: randomBoard(),\n      // player: {},\n      position: 0,\n      playing: false,\n      synths: synths,\n      randomiseNext: false,\n      randomiseInterval: 4,\n      functions: {\n        'change': this.change.bind(this),\n        'add': this.addTile.bind(this),\n        'subtract': this.subtractTile.bind(this),\n        'addRow': this.addRow.bind(this),\n        'subtractRow': this.subtractRow.bind(this)\n      },\n    }\n\n  }\n  componentDidMount(){\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    Tone.Transport.PPQ = 24\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ windowWidth: window.innerWidth, windowHeight:window.innerHeight });\n  }\n  randomise(){\n    if (this.state.playing === true) {\n      this.setState({randomiseNext: true})\n    } else {\n      const newData = randomBoard()\n      this.setState({data: newData})\n    }\n  }\n  change(row, col){\n    // const {row, col} = e.target.dataset\n    let data = this.state.data\n    let oldValue = data[row][col]\n    data[row][col] = (oldValue + 1) % 6\n    this.setState({data: data})\n  }\n  addTile(row){\n    let data = this.state.data\n    if (data[row].length < 9){\n      data[row].push(0)\n      this.setState({data: data})\n    }\n  }\n  subtractTile(row){\n    let data = this.state.data\n    if (data[row].length > 1){\n      data[row].pop()\n      this.setState({data: data})\n    }\n  }\n  addRow(){\n    let data = this.state.data\n    if (data.length < 6){\n      data.push([0,0,0,0])\n      this.setState({data: data})\n    }\n  }\n  subtractRow(){\n    let data = this.state.data\n    if (data.length > 1){\n      data.pop()\n      this.setState({data: data})\n    }\n  }\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n  start(){\n    Tone.Transport.scheduleRepeat((time)=>{\n      let {position, data, playPosition, synths} = this.state\n      for(const [i, row] of data.entries()){\n        const notes = settings.notes\n        let newPos = Math.floor((position / 100) * row.length)\n        if (playPosition[i] !== newPos) {\n          playPosition[i] = newPos\n          if (playPosition[i] === row.length) {\n            playPosition[i] = 0\n          }\n          const note = notes[row[playPosition[i]]]\n          if(note !== 0){\n            synths[i].triggerAttackRelease(note + (i + 2).toString(), \"16n\", time)\n          }\n        }\n      }\n      if (position >= 100) {\n        position = 1\n        if (this.state.randomiseNext === true){\n          const newData = randomBoard()\n          this.setState({data: newData, randomiseNext: false})\n        }\n      } else {\n        position += (100 / (24 * 4))\n      }\n      this.setState({position: position, playPosition: playPosition})\n    }, \"1i\")\n    Tone.Transport.start(\"+0.1\")\n    Tone.start()\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    this.setState({position: 1, playPosition: playPosition, playing: true})\n  }\n  stop(){\n    Tone.Transport.stop()\n    Tone.Transport.cancel()\n    let playPosition = []\n    for(let i = 0; i < 6; i++){\n      playPosition[i] = -1\n    }\n    this.setState({position: 0, playPosition: playPosition, playing: false, randomiseNext: false})\n  }\n  buttonStyle(){\n    return {margin: '5px', float: 'left'}\n  }\n  render() {\n    let {data} = this.state, desktop = this.state.windowWidth > 600\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\" color='default'>\n          <Toolbar>\n          <Button variant=\"contained\" onClick={this.start} disabled={this.state.playing} style={this.buttonStyle()}><PlayArrowIcon /></Button>\n          <Button variant=\"contained\" onClick={this.stop} disabled={!this.state.playing} style={this.buttonStyle()}><StopIcon /></Button>\n          <Button variant=\"contained\" onClick={this.randomise} disabled={this.state.randomiseNext} style={this.buttonStyle()}>Randomise</Button>\n          </Toolbar>\n          </AppBar>\n        </MuiThemeProvider>\n        <Board data={data} position={this.state.position} functions={this.state.functions} width={this.state.windowWidth} height={desktop ? this.state.windowHeight - 160 : this.state.windowHeight - 110} desktop={desktop}>\n        </Board>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}